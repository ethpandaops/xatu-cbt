volumes:
  cbt-config:
  clickhouse-01-data:
    driver: local
  clickhouse-02-data:
    driver: local
  clickhouse-zookeeper-01-data:
    driver: local
  clickhouse-zookeeper-02-data:
    driver: local
  clickhouse-zookeeper-03-data:
    driver: local
  clickhouse-zookeeper-01-datalog:
    driver: local
  clickhouse-zookeeper-02-datalog:
    driver: local
  clickhouse-zookeeper-03-datalog:
    driver: local

services:
  cbt-redis:
    image: redis:7-alpine
    profiles:
      - ""
    container_name: cbt-redis-${NETWORK}
    # No volume mount - Redis data should not persist across test runs
    # This ensures a clean state when containers are restarted
    command: redis-server
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - xatu_xatu-net

  # Config setup container
  cbt-config-setup:
    image: python:3.12-alpine
    container_name: cbt-config-setup-${NETWORK}
    profiles:
      - ""
    depends_on:
      xatu-cbt-clickhouse-01:
        condition: service_healthy
      xatu-cbt-clickhouse-02:
        condition: service_healthy
    volumes:
      - cbt-config:/config
      - ./overrides.yaml:/overrides.yaml:ro
      - ./overrides.tests.yaml:/overrides.tests.yaml:ro
    environment:
      - TESTING=${TESTING:-false}
      - NETWORK=${NETWORK}
      - CLICKHOUSE_USERNAME=${CLICKHOUSE_USERNAME}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
    command:
      - /bin/sh
      - -c
      - |
        pip install pyyaml > /dev/null 2>&1
        python3 << 'PYTHON_SCRIPT'
        import yaml
        import os
        
        network = os.environ.get('NETWORK', 'mainnet')
        testing = os.environ.get('TESTING', 'false').lower() == 'true'
        clickhouse_user = os.environ.get('CLICKHOUSE_USERNAME', 'default')
        clickhouse_pass = os.environ.get('CLICKHOUSE_PASSWORD', '')
        
        # Base configuration
        config = {
            'logging': 'debug',
            'metricsAddr': ':9090',
            'healthCheckAddr': ':8081',
            'clickhouse': {
                'url': f'http://{clickhouse_user}:{clickhouse_pass}@xatu-cbt-clickhouse-01:8123',
                'cluster': '{cluster}',
                'localSuffix': '_local',
                'admin': {
                    'incremental': {
                        'database': network,
                        'table': 'admin_cbt_incremental'
                    },
                    'scheduled': {
                        'database': network,
                        'table': 'admin_cbt_scheduled'
                    }
                }
            },
            'redis': {
                'url': f'redis://cbt-redis-{network}:6379/0'
            },
            'scheduler': {
                'concurrency': 10,
                'consolidation': '@every 10m'
            },
            'worker': {
                'concurrency': 10
            },
            'models': {
                'external': {
                    'defaultCluster': '{remote_cluster}',
                    'defaultDatabase': 'default'
                },
                'transformations': {
                    'defaultDatabase': network
                },
                'env': {
                    'NETWORK': network
                }
            },
            'frontend': {
                'enabled': True,
                'addr': ':8080'
            },
            'interval_types': {
                'slot': [
                    {
                        'name': 'Slot',
                        'expression': "math.floor((value - 1606824023) / 12)"
                    },
                    {
                        'name': 'Datetime',
                        'format': 'datetime',
                        'expression': "value * 1000"
                    }
                ],
                'block': [
                    {
                        'name': 'Block number'
                    }
                ],
                'entity': [
                    {
                        'name': 'Validator index'
                    }
                ]
            } 
        }
        
        # Merge with overrides if they exist
        override_file = '/overrides.tests.yaml' if testing else '/overrides.yaml'
        if os.path.exists(override_file) and os.path.getsize(override_file) > 0:
            with open(override_file, 'r') as f:
                overrides = yaml.safe_load(f)
                if overrides:
                    # Deep merge the configurations
                    def deep_merge(base, override):
                        for key, value in override.items():
                            if key in base and isinstance(base[key], dict) and isinstance(value, dict):
                                deep_merge(base[key], value)
                            else:
                                base[key] = value
                    deep_merge(config, overrides)
                    print(f"Merged {'test' if testing else 'production'} overrides")
        
        # Write the final configuration
        with open(f'/config/{network}.yaml', 'w') as f:
            yaml.dump(config, f, default_flow_style=False, sort_keys=False)
        
        print("Config file created successfully")
        PYTHON_SCRIPT

  # CBT Engine
  cbt-engine:
    image: ethpandaops/cbt:debian-latest
    container_name: cbt-engine-${NETWORK}
    profiles:
      - ""
    depends_on:
      cbt-config-setup:
        condition: service_completed_successfully
    volumes:
      - ./models:/models:ro
      - cbt-config:/config:ro
    command: ["--config", "/config/${NETWORK}.yaml"]
    restart: unless-stopped
    ports:
      - "8080:8080"  # Frontend port
    networks:
      - xatu_xatu-net
    deploy:
      replicas: 1

  xatu-cbt-clickhouse-01:
    image: "clickhouse/clickhouse-server:${CHVER:-latest}"
    container_name: xatu-cbt-clickhouse-01
    hostname: xatu-cbt-clickhouse-01
    user: 101:101
    profiles:
      - clickhouse
      - ""
    networks:
      - xatu_xatu-net
    volumes:
      - clickhouse-01-data:/var/lib/clickhouse/
      - ./local-config/clickhouse/clickhouse-01/etc/clickhouse-server/config.d/config.xml:/etc/clickhouse-server/config.d/config.xml
      - ./local-config/clickhouse/clickhouse-01/etc/clickhouse-server/users.d/users.xml:/etc/clickhouse-server/users.d/users.xml
      - ./local-config/clickhouse/clickhouse-01/etc/clickhouse-server/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "${CLICKHOUSE_CBT_01_HTTP_ADDRESS:-127.0.0.1}:${CLICKHOUSE_CBT_01_HTTP_PORT:-8123}:8123"
      - "${CLICKHOUSE_CBT_01_NATIVE_ADDRESS:-127.0.0.1}:${CLICKHOUSE_CBT_01_NATIVE_PORT:-9000}:9000"
    depends_on:
      xatu-cbt-clickhouse-zookeeper-01:
        condition: service_healthy
      xatu-cbt-clickhouse-zookeeper-02:
        condition: service_healthy
      xatu-cbt-clickhouse-zookeeper-03:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "set -x; wget --spider --quiet http://xatu-cbt-clickhouse-01:9000 || exit 1; wget --spider --quiet --header 'Host: localhost' --post-data 'query=SELECT 1' http://localhost:8123 || exit 1",
        ]
      interval: 5s
      timeout: 10s
      retries: 15
      start_period: 15s
    environment:
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
      - CLICKHOUSE_USER_READONLY_PASSWORD=${CLICKHOUSE_USER_READONLY_PASSWORD:-readonly}
  xatu-cbt-clickhouse-02:
    image: "clickhouse/clickhouse-server:${CHVER:-latest}"
    container_name: xatu-cbt-clickhouse-02
    hostname: xatu-cbt-clickhouse-02
    user: 101:101
    profiles:
      - clickhouse
      - ""
    networks:
      - xatu_xatu-net
    volumes:
      - clickhouse-02-data:/var/lib/clickhouse/
      - ./local-config/clickhouse/clickhouse-02/etc/clickhouse-server/config.d/config.xml:/etc/clickhouse-server/config.d/config.xml
      - ./local-config/clickhouse/clickhouse-02/etc/clickhouse-server/users.d/users.xml:/etc/clickhouse-server/users.d/users.xml
      - ./local-config/clickhouse/clickhouse-02/etc/clickhouse-server/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "${CLICKHOUSE_CBT_02_HTTP_ADDRESS:-127.0.0.1}:${CLICKHOUSE_CBT_02_HTTP_PORT:-8124}:8123"
      - "${CLICKHOUSE_CBT_02_NATIVE_ADDRESS:-127.0.0.1}:${CLICKHOUSE_CBT_02_NATIVE_PORT:-9001}:9000"
    depends_on:
      xatu-cbt-clickhouse-zookeeper-01:
        condition: service_healthy
      xatu-cbt-clickhouse-zookeeper-02:
        condition: service_healthy
      xatu-cbt-clickhouse-zookeeper-03:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "set -x; wget --spider --quiet http://xatu-cbt-clickhouse-02:9000 || exit 1; wget --spider --quiet --header 'Host: localhost' --post-data 'query=SELECT 1' http://localhost:8123 || exit 1",
        ]
      interval: 5s
      timeout: 10s
      retries: 15
      start_period: 15s
    environment:
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD:-supersecret}
      - CLICKHOUSE_USER_READONLY_PASSWORD=${CLICKHOUSE_USER_READONLY_PASSWORD:-readonly}
  xatu-cbt-clickhouse-zookeeper-01:
    image: zookeeper:3.9
    container_name: xatu-cbt-clickhouse-zookeeper-01
    hostname: xatu-cbt-clickhouse-zookeeper-01
    profiles:
      - clickhouse
      - ""
    networks:
      - xatu_xatu-net
    volumes:
      - clickhouse-zookeeper-01-data:/data
      - clickhouse-zookeeper-01-datalog:/datalog
    environment:
      ZOO_MY_ID: 1
      ZOO_4LW_COMMANDS_WHITELIST: "*"
      ZOO_SERVERS: "server.1=xatu-cbt-clickhouse-zookeeper-01:2888:3888;2181 server.2=xatu-cbt-clickhouse-zookeeper-02:2888:3888;2181 server.3=xatu-cbt-clickhouse-zookeeper-03:2888:3888;2181"
      ZOO_AUTOPURGE_PURGEINTERVAL: 1
      ZOO_AUTOPURGE_SNAPRETAINCOUNT: 3
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181 | grep -q 'imok'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
  xatu-cbt-clickhouse-zookeeper-02:
    image: zookeeper:3.9
    container_name: xatu-cbt-clickhouse-zookeeper-02
    hostname: xatu-cbt-clickhouse-zookeeper-02
    profiles:
      - clickhouse
      - ""
    networks:
      - xatu_xatu-net
    volumes:
      - clickhouse-zookeeper-02-data:/data
      - clickhouse-zookeeper-02-datalog:/datalog
    environment:
      ZOO_MY_ID: 2
      ZOO_4LW_COMMANDS_WHITELIST: "*"
      ZOO_SERVERS: "server.1=xatu-cbt-clickhouse-zookeeper-01:2888:3888;2181 server.2=xatu-cbt-clickhouse-zookeeper-02:2888:3888;2181 server.3=xatu-cbt-clickhouse-zookeeper-03:2888:3888;2181"
      ZOO_AUTOPURGE_PURGEINTERVAL: 1
      ZOO_AUTOPURGE_SNAPRETAINCOUNT: 3
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181 | grep -q 'imok'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
  xatu-cbt-clickhouse-zookeeper-03:
    image: zookeeper:3.9
    container_name: xatu-cbt-clickhouse-zookeeper-03
    hostname: xatu-cbt-clickhouse-zookeeper-03
    profiles:
      - clickhouse
      - ""
    networks:
      - xatu_xatu-net
    volumes:
      - clickhouse-zookeeper-03-data:/data
      - clickhouse-zookeeper-03-datalog:/datalog
    environment:
      ZOO_MY_ID: 3
      ZOO_4LW_COMMANDS_WHITELIST: "*"
      ZOO_SERVERS: "server.1=xatu-cbt-clickhouse-zookeeper-01:2888:3888;2181 server.2=xatu-cbt-clickhouse-zookeeper-02:2888:3888;2181 server.3=xatu-cbt-clickhouse-zookeeper-03:2888:3888;2181"
      ZOO_AUTOPURGE_PURGEINTERVAL: 1
      ZOO_AUTOPURGE_SNAPRETAINCOUNT: 3
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181 | grep -q 'imok'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

networks:
  xatu_xatu-net:
    external: true
