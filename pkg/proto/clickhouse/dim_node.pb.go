// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: dim_node.proto

package clickhouse

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DimNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Timestamp when the record was last updated
	UpdatedDateTime uint32 `protobuf:"varint,11,opt,name=updated_date_time,json=updatedDateTime,proto3" json:"updated_date_time,omitempty"`
	// The index of the validator
	ValidatorIndex uint32 `protobuf:"varint,12,opt,name=validator_index,json=validatorIndex,proto3" json:"validator_index,omitempty"`
	// The name of the node
	Name *wrapperspb.StringValue `protobuf:"bytes,13,opt,name=name,proto3" json:"name,omitempty"`
	// Groups the node belongs to
	Groups []string `protobuf:"bytes,14,rep,name=groups,proto3" json:"groups,omitempty"`
	// Tags associated with the node
	Tags []string `protobuf:"bytes,15,rep,name=tags,proto3" json:"tags,omitempty"`
	// Additional attributes of the node
	Attributes string `protobuf:"bytes,16,opt,name=attributes,proto3" json:"attributes,omitempty"`
	// The source entity of the node
	Source string `protobuf:"bytes,17,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *DimNode) Reset() {
	*x = DimNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dim_node_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DimNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DimNode) ProtoMessage() {}

func (x *DimNode) ProtoReflect() protoreflect.Message {
	mi := &file_dim_node_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DimNode.ProtoReflect.Descriptor instead.
func (*DimNode) Descriptor() ([]byte, []int) {
	return file_dim_node_proto_rawDescGZIP(), []int{0}
}

func (x *DimNode) GetUpdatedDateTime() uint32 {
	if x != nil {
		return x.UpdatedDateTime
	}
	return 0
}

func (x *DimNode) GetValidatorIndex() uint32 {
	if x != nil {
		return x.ValidatorIndex
	}
	return 0
}

func (x *DimNode) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *DimNode) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *DimNode) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *DimNode) GetAttributes() string {
	if x != nil {
		return x.Attributes
	}
	return ""
}

func (x *DimNode) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// ListDimNodeRequest is the request message for listing dim_node records
type ListDimNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter by validator_index (PRIMARY KEY - required)
	ValidatorIndex *UInt32Filter `protobuf:"bytes,1,opt,name=validator_index,json=validatorIndex,proto3" json:"validator_index,omitempty"`
	// Filter by updated_date_time (optional)
	UpdatedDateTime *UInt32Filter `protobuf:"bytes,2,opt,name=updated_date_time,json=updatedDateTime,proto3" json:"updated_date_time,omitempty"`
	// Filter by name (optional)
	Name *NullableStringFilter `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Filter by groups (optional)
	Groups []string `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	// Filter by tags (optional)
	Tags []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	// Filter by attributes (optional)
	Attributes *MapStringStringFilter `protobuf:"bytes,6,opt,name=attributes,proto3" json:"attributes,omitempty"`
	// Filter by source (optional)
	Source *StringFilter `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
	// The maximum number of dim_node to return.
	// If unspecified, at most 100 items will be returned.
	// The maximum value is 1000; values above 1000 will be coerced to 1000.
	PageSize int32 `protobuf:"varint,8,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous `ListDimNode` call.
	// Provide this to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,9,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The order of results. Format: comma-separated list of fields.
	// Example: "foo,bar" or "foo desc,bar" for descending order on foo.
	// If unspecified, results will be returned in the default order.
	OrderBy string `protobuf:"bytes,10,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *ListDimNodeRequest) Reset() {
	*x = ListDimNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dim_node_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDimNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDimNodeRequest) ProtoMessage() {}

func (x *ListDimNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dim_node_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDimNodeRequest.ProtoReflect.Descriptor instead.
func (*ListDimNodeRequest) Descriptor() ([]byte, []int) {
	return file_dim_node_proto_rawDescGZIP(), []int{1}
}

func (x *ListDimNodeRequest) GetValidatorIndex() *UInt32Filter {
	if x != nil {
		return x.ValidatorIndex
	}
	return nil
}

func (x *ListDimNodeRequest) GetUpdatedDateTime() *UInt32Filter {
	if x != nil {
		return x.UpdatedDateTime
	}
	return nil
}

func (x *ListDimNodeRequest) GetName() *NullableStringFilter {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ListDimNodeRequest) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *ListDimNodeRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ListDimNodeRequest) GetAttributes() *MapStringStringFilter {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ListDimNodeRequest) GetSource() *StringFilter {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *ListDimNodeRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDimNodeRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListDimNodeRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

// ListDimNodeResponse is the response message for listing dim_node records
type ListDimNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of dim_node.
	DimNode []*DimNode `protobuf:"bytes,1,rep,name=dim_node,json=dimNode,proto3" json:"dim_node,omitempty"`
	// A token, which can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListDimNodeResponse) Reset() {
	*x = ListDimNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dim_node_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDimNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDimNodeResponse) ProtoMessage() {}

func (x *ListDimNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dim_node_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDimNodeResponse.ProtoReflect.Descriptor instead.
func (*ListDimNodeResponse) Descriptor() ([]byte, []int) {
	return file_dim_node_proto_rawDescGZIP(), []int{2}
}

func (x *ListDimNodeResponse) GetDimNode() []*DimNode {
	if x != nil {
		return x.DimNode
	}
	return nil
}

func (x *ListDimNodeResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// GetDimNodeRequest is the request message for getting a single dim_node record by primary key
type GetDimNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the validator
	ValidatorIndex uint32 `protobuf:"varint,1,opt,name=validator_index,json=validatorIndex,proto3" json:"validator_index,omitempty"` // Primary key (required)
}

func (x *GetDimNodeRequest) Reset() {
	*x = GetDimNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dim_node_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDimNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDimNodeRequest) ProtoMessage() {}

func (x *GetDimNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dim_node_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDimNodeRequest.ProtoReflect.Descriptor instead.
func (*GetDimNodeRequest) Descriptor() ([]byte, []int) {
	return file_dim_node_proto_rawDescGZIP(), []int{3}
}

func (x *GetDimNodeRequest) GetValidatorIndex() uint32 {
	if x != nil {
		return x.ValidatorIndex
	}
	return 0
}

// GetDimNodeResponse is the response message for getting a single dim_node record
type GetDimNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *DimNode `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *GetDimNodeResponse) Reset() {
	*x = GetDimNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dim_node_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDimNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDimNodeResponse) ProtoMessage() {}

func (x *GetDimNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dim_node_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDimNodeResponse.ProtoReflect.Descriptor instead.
func (*GetDimNodeResponse) Descriptor() ([]byte, []int) {
	return file_dim_node_proto_rawDescGZIP(), []int{4}
}

func (x *GetDimNodeResponse) GetItem() *DimNode {
	if x != nil {
		return x.Item
	}
	return nil
}

var File_dim_node_proto protoreflect.FileDescriptor

var file_dim_node_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x64, 0x69, 0x6d, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x63, 0x62, 0x74, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xf4, 0x01, 0x0a, 0x07, 0x44, 0x69, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xa8, 0x03, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3a, 0x0a, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x62, 0x74,
	0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3d, 0x0a,
	0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x55,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x62, 0x74,
	0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x62,
	0x74, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x22, 0x66, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x08,
	0x64, 0x69, 0x6d, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x63, 0x62, 0x74, 0x2e, 0x44, 0x69, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x64, 0x69,
	0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3c, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x36, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x44, 0x69, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x32, 0x83, 0x01, 0x0a, 0x0e, 0x44, 0x69, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17,
	0x2e, 0x63, 0x62, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x6d, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x69, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x6d, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x74, 0x68, 0x70, 0x61, 0x6e, 0x64, 0x61,
	0x6f, 0x70, 0x73, 0x2f, 0x78, 0x61, 0x74, 0x75, 0x2d, 0x63, 0x62, 0x74, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dim_node_proto_rawDescOnce sync.Once
	file_dim_node_proto_rawDescData = file_dim_node_proto_rawDesc
)

func file_dim_node_proto_rawDescGZIP() []byte {
	file_dim_node_proto_rawDescOnce.Do(func() {
		file_dim_node_proto_rawDescData = protoimpl.X.CompressGZIP(file_dim_node_proto_rawDescData)
	})
	return file_dim_node_proto_rawDescData
}

var file_dim_node_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_dim_node_proto_goTypes = []any{
	(*DimNode)(nil),                // 0: cbt.DimNode
	(*ListDimNodeRequest)(nil),     // 1: cbt.ListDimNodeRequest
	(*ListDimNodeResponse)(nil),    // 2: cbt.ListDimNodeResponse
	(*GetDimNodeRequest)(nil),      // 3: cbt.GetDimNodeRequest
	(*GetDimNodeResponse)(nil),     // 4: cbt.GetDimNodeResponse
	(*wrapperspb.StringValue)(nil), // 5: google.protobuf.StringValue
	(*UInt32Filter)(nil),           // 6: cbt.UInt32Filter
	(*NullableStringFilter)(nil),   // 7: cbt.NullableStringFilter
	(*MapStringStringFilter)(nil),  // 8: cbt.MapStringStringFilter
	(*StringFilter)(nil),           // 9: cbt.StringFilter
}
var file_dim_node_proto_depIdxs = []int32{
	5,  // 0: cbt.DimNode.name:type_name -> google.protobuf.StringValue
	6,  // 1: cbt.ListDimNodeRequest.validator_index:type_name -> cbt.UInt32Filter
	6,  // 2: cbt.ListDimNodeRequest.updated_date_time:type_name -> cbt.UInt32Filter
	7,  // 3: cbt.ListDimNodeRequest.name:type_name -> cbt.NullableStringFilter
	8,  // 4: cbt.ListDimNodeRequest.attributes:type_name -> cbt.MapStringStringFilter
	9,  // 5: cbt.ListDimNodeRequest.source:type_name -> cbt.StringFilter
	0,  // 6: cbt.ListDimNodeResponse.dim_node:type_name -> cbt.DimNode
	0,  // 7: cbt.GetDimNodeResponse.item:type_name -> cbt.DimNode
	1,  // 8: cbt.DimNodeService.List:input_type -> cbt.ListDimNodeRequest
	3,  // 9: cbt.DimNodeService.Get:input_type -> cbt.GetDimNodeRequest
	2,  // 10: cbt.DimNodeService.List:output_type -> cbt.ListDimNodeResponse
	4,  // 11: cbt.DimNodeService.Get:output_type -> cbt.GetDimNodeResponse
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_dim_node_proto_init() }
func file_dim_node_proto_init() {
	if File_dim_node_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dim_node_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*DimNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dim_node_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ListDimNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dim_node_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListDimNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dim_node_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetDimNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dim_node_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetDimNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dim_node_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dim_node_proto_goTypes,
		DependencyIndexes: file_dim_node_proto_depIdxs,
		MessageInfos:      file_dim_node_proto_msgTypes,
	}.Build()
	File_dim_node_proto = out.File
	file_dim_node_proto_rawDesc = nil
	file_dim_node_proto_goTypes = nil
	file_dim_node_proto_depIdxs = nil
}
