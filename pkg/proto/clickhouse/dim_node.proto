syntax = "proto3";

package cbt;

import "common.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/ethpandaops/xatu-cbt/pkg/proto/clickhouse";
// Node information for validators

message DimNode {
  // Timestamp when the record was last updated
  uint32 updated_date_time = 11;
  // The index of the validator
  uint32 validator_index = 12;
  // The name of the node
  google.protobuf.StringValue name = 13;
  // Groups the node belongs to
  repeated string groups = 14;
  // Tags associated with the node
  repeated string tags = 15;
  // Additional attributes of the node
  string attributes = 16;
  // The source entity of the node
  string source = 17;
}

// ListDimNodeRequest is the request message for listing dim_node records
message ListDimNodeRequest {
  // Filter by validator_index (PRIMARY KEY - required)
  UInt32Filter validator_index = 1;

  // Filter by updated_date_time (optional)
  UInt32Filter updated_date_time = 2;
  // Filter by name (optional)
  NullableStringFilter name = 3;
  // Filter by groups (optional)
  repeated string groups = 4;
  // Filter by tags (optional)
  repeated string tags = 5;
  // Filter by attributes (optional)
  MapStringStringFilter attributes = 6;
  // Filter by source (optional)
  StringFilter source = 7;

  // The maximum number of dim_node to return.
  // If unspecified, at most 100 items will be returned.
  // The maximum value is 10000; values above 10000 will be coerced to 10000.
  int32 page_size = 8;
  // A page token, received from a previous `ListDimNode` call.
  // Provide this to retrieve the subsequent page.
  string page_token = 9;
  // The order of results. Format: comma-separated list of fields.
  // Example: "foo,bar" or "foo desc,bar" for descending order on foo.
  // If unspecified, results will be returned in the default order.
  string order_by = 10;
}

// ListDimNodeResponse is the response message for listing dim_node records
message ListDimNodeResponse {
  // The list of dim_node.
  repeated DimNode dim_node = 1;
  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// GetDimNodeRequest is the request message for getting a single dim_node record by primary key
message GetDimNodeRequest {
  // The index of the validator
  uint32 validator_index = 1; // Primary key (required)
}

// GetDimNodeResponse is the response message for getting a single dim_node record
message GetDimNodeResponse {
  DimNode item = 1;
}

// DimNodeService provides RPC methods for querying dim_node data
service DimNodeService {
  // List returns paginated dim_node records
  rpc List(ListDimNodeRequest) returns (ListDimNodeResponse);
  // Get returns a single dim_node record by primary key
  rpc Get(GetDimNodeRequest) returns (GetDimNodeResponse);
}
