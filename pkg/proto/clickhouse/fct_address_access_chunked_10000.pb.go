// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: fct_address_access_chunked_10000.proto

package clickhouse

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FctAddressAccessChunked10000 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Timestamp when the record was last updated
	UpdatedDateTime uint32 `protobuf:"varint,11,opt,name=updated_date_time,json=updatedDateTime,proto3" json:"updated_date_time,omitempty"`
	// Start block number of the chunk
	ChunkStartBlockNumber uint32 `protobuf:"varint,12,opt,name=chunk_start_block_number,json=chunkStartBlockNumber,proto3" json:"chunk_start_block_number,omitempty"`
	// Number of accounts first accessed in the chunk
	FirstAccessedAccounts uint32 `protobuf:"varint,13,opt,name=first_accessed_accounts,json=firstAccessedAccounts,proto3" json:"first_accessed_accounts,omitempty"`
	// Number of accounts last accessed in the chunk
	LastAccessedAccounts uint32 `protobuf:"varint,14,opt,name=last_accessed_accounts,json=lastAccessedAccounts,proto3" json:"last_accessed_accounts,omitempty"`
}

func (x *FctAddressAccessChunked10000) Reset() {
	*x = FctAddressAccessChunked10000{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fct_address_access_chunked_10000_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FctAddressAccessChunked10000) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FctAddressAccessChunked10000) ProtoMessage() {}

func (x *FctAddressAccessChunked10000) ProtoReflect() protoreflect.Message {
	mi := &file_fct_address_access_chunked_10000_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FctAddressAccessChunked10000.ProtoReflect.Descriptor instead.
func (*FctAddressAccessChunked10000) Descriptor() ([]byte, []int) {
	return file_fct_address_access_chunked_10000_proto_rawDescGZIP(), []int{0}
}

func (x *FctAddressAccessChunked10000) GetUpdatedDateTime() uint32 {
	if x != nil {
		return x.UpdatedDateTime
	}
	return 0
}

func (x *FctAddressAccessChunked10000) GetChunkStartBlockNumber() uint32 {
	if x != nil {
		return x.ChunkStartBlockNumber
	}
	return 0
}

func (x *FctAddressAccessChunked10000) GetFirstAccessedAccounts() uint32 {
	if x != nil {
		return x.FirstAccessedAccounts
	}
	return 0
}

func (x *FctAddressAccessChunked10000) GetLastAccessedAccounts() uint32 {
	if x != nil {
		return x.LastAccessedAccounts
	}
	return 0
}

// ListFctAddressAccessChunked10000Request is the request message for listing fct_address_access_chunked_10000 records
type ListFctAddressAccessChunked10000Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter by chunk_start_block_number (PRIMARY KEY - required)
	ChunkStartBlockNumber *UInt32Filter `protobuf:"bytes,1,opt,name=chunk_start_block_number,json=chunkStartBlockNumber,proto3" json:"chunk_start_block_number,omitempty"`
	// Filter by updated_date_time (optional)
	UpdatedDateTime *UInt32Filter `protobuf:"bytes,2,opt,name=updated_date_time,json=updatedDateTime,proto3" json:"updated_date_time,omitempty"`
	// Filter by first_accessed_accounts (optional)
	FirstAccessedAccounts *UInt32Filter `protobuf:"bytes,3,opt,name=first_accessed_accounts,json=firstAccessedAccounts,proto3" json:"first_accessed_accounts,omitempty"`
	// Filter by last_accessed_accounts (optional)
	LastAccessedAccounts *UInt32Filter `protobuf:"bytes,4,opt,name=last_accessed_accounts,json=lastAccessedAccounts,proto3" json:"last_accessed_accounts,omitempty"`
	// The maximum number of fct_address_access_chunked_10000 to return.
	// If unspecified, at most 100 items will be returned.
	// The maximum value is 10000; values above 10000 will be coerced to 10000.
	PageSize int32 `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous `ListFctAddressAccessChunked10000` call.
	// Provide this to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,6,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The order of results. Format: comma-separated list of fields.
	// Example: "foo,bar" or "foo desc,bar" for descending order on foo.
	// If unspecified, results will be returned in the default order.
	OrderBy string `protobuf:"bytes,7,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *ListFctAddressAccessChunked10000Request) Reset() {
	*x = ListFctAddressAccessChunked10000Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fct_address_access_chunked_10000_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFctAddressAccessChunked10000Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFctAddressAccessChunked10000Request) ProtoMessage() {}

func (x *ListFctAddressAccessChunked10000Request) ProtoReflect() protoreflect.Message {
	mi := &file_fct_address_access_chunked_10000_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFctAddressAccessChunked10000Request.ProtoReflect.Descriptor instead.
func (*ListFctAddressAccessChunked10000Request) Descriptor() ([]byte, []int) {
	return file_fct_address_access_chunked_10000_proto_rawDescGZIP(), []int{1}
}

func (x *ListFctAddressAccessChunked10000Request) GetChunkStartBlockNumber() *UInt32Filter {
	if x != nil {
		return x.ChunkStartBlockNumber
	}
	return nil
}

func (x *ListFctAddressAccessChunked10000Request) GetUpdatedDateTime() *UInt32Filter {
	if x != nil {
		return x.UpdatedDateTime
	}
	return nil
}

func (x *ListFctAddressAccessChunked10000Request) GetFirstAccessedAccounts() *UInt32Filter {
	if x != nil {
		return x.FirstAccessedAccounts
	}
	return nil
}

func (x *ListFctAddressAccessChunked10000Request) GetLastAccessedAccounts() *UInt32Filter {
	if x != nil {
		return x.LastAccessedAccounts
	}
	return nil
}

func (x *ListFctAddressAccessChunked10000Request) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListFctAddressAccessChunked10000Request) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListFctAddressAccessChunked10000Request) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

// ListFctAddressAccessChunked10000Response is the response message for listing fct_address_access_chunked_10000 records
type ListFctAddressAccessChunked10000Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of fct_address_access_chunked_10000.
	FctAddressAccessChunked_10000 []*FctAddressAccessChunked10000 `protobuf:"bytes,1,rep,name=fct_address_access_chunked_10000,json=fctAddressAccessChunked10000,proto3" json:"fct_address_access_chunked_10000,omitempty"`
	// A token, which can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListFctAddressAccessChunked10000Response) Reset() {
	*x = ListFctAddressAccessChunked10000Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fct_address_access_chunked_10000_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFctAddressAccessChunked10000Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFctAddressAccessChunked10000Response) ProtoMessage() {}

func (x *ListFctAddressAccessChunked10000Response) ProtoReflect() protoreflect.Message {
	mi := &file_fct_address_access_chunked_10000_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFctAddressAccessChunked10000Response.ProtoReflect.Descriptor instead.
func (*ListFctAddressAccessChunked10000Response) Descriptor() ([]byte, []int) {
	return file_fct_address_access_chunked_10000_proto_rawDescGZIP(), []int{2}
}

func (x *ListFctAddressAccessChunked10000Response) GetFctAddressAccessChunked_10000() []*FctAddressAccessChunked10000 {
	if x != nil {
		return x.FctAddressAccessChunked_10000
	}
	return nil
}

func (x *ListFctAddressAccessChunked10000Response) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// GetFctAddressAccessChunked10000Request is the request message for getting a single fct_address_access_chunked_10000 record by primary key
type GetFctAddressAccessChunked10000Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Start block number of the chunk
	ChunkStartBlockNumber uint32 `protobuf:"varint,1,opt,name=chunk_start_block_number,json=chunkStartBlockNumber,proto3" json:"chunk_start_block_number,omitempty"` // Primary key (required)
}

func (x *GetFctAddressAccessChunked10000Request) Reset() {
	*x = GetFctAddressAccessChunked10000Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fct_address_access_chunked_10000_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFctAddressAccessChunked10000Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFctAddressAccessChunked10000Request) ProtoMessage() {}

func (x *GetFctAddressAccessChunked10000Request) ProtoReflect() protoreflect.Message {
	mi := &file_fct_address_access_chunked_10000_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFctAddressAccessChunked10000Request.ProtoReflect.Descriptor instead.
func (*GetFctAddressAccessChunked10000Request) Descriptor() ([]byte, []int) {
	return file_fct_address_access_chunked_10000_proto_rawDescGZIP(), []int{3}
}

func (x *GetFctAddressAccessChunked10000Request) GetChunkStartBlockNumber() uint32 {
	if x != nil {
		return x.ChunkStartBlockNumber
	}
	return 0
}

// GetFctAddressAccessChunked10000Response is the response message for getting a single fct_address_access_chunked_10000 record
type GetFctAddressAccessChunked10000Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *FctAddressAccessChunked10000 `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *GetFctAddressAccessChunked10000Response) Reset() {
	*x = GetFctAddressAccessChunked10000Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fct_address_access_chunked_10000_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFctAddressAccessChunked10000Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFctAddressAccessChunked10000Response) ProtoMessage() {}

func (x *GetFctAddressAccessChunked10000Response) ProtoReflect() protoreflect.Message {
	mi := &file_fct_address_access_chunked_10000_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFctAddressAccessChunked10000Response.ProtoReflect.Descriptor instead.
func (*GetFctAddressAccessChunked10000Response) Descriptor() ([]byte, []int) {
	return file_fct_address_access_chunked_10000_proto_rawDescGZIP(), []int{4}
}

func (x *GetFctAddressAccessChunked10000Response) GetItem() *FctAddressAccessChunked10000 {
	if x != nil {
		return x.Item
	}
	return nil
}

var File_fct_address_access_chunked_10000_proto protoreflect.FileDescriptor

var file_fct_address_access_chunked_10000_proto_rawDesc = []byte{
	0x0a, 0x26, 0x66, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x31, 0x30, 0x30,
	0x30, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x63, 0x62, 0x74, 0x1a, 0x0c, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf1, 0x01, 0x0a, 0x1c,
	0x46, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x65, 0x64, 0x31, 0x30, 0x30, 0x30, 0x30, 0x12, 0x2a, 0x0a, 0x11,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x36, 0x0a, 0x17, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x15, 0x66, 0x69, 0x72, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22,
	0x9f, 0x03, 0x0a, 0x27, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x65, 0x64, 0x31,
	0x30, 0x30, 0x30, 0x30, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x18, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x62, 0x74, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x15, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x17, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x55, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x15, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x12, 0x47, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x22, 0xbd, 0x01, 0x0a, 0x28, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x63, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x65,
	0x64, 0x31, 0x30, 0x30, 0x30, 0x30, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69,
	0x0a, 0x20, 0x66, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x31, 0x30, 0x30,
	0x30, 0x30, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x46,
	0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x65, 0x64, 0x31, 0x30, 0x30, 0x30, 0x30, 0x52, 0x1c, 0x66, 0x63, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x65, 0x64, 0x31, 0x30, 0x30, 0x30, 0x30, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x61, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x46, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x65, 0x64, 0x31,
	0x30, 0x30, 0x30, 0x30, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x18, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x60, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x46, 0x63, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x65, 0x64, 0x31, 0x30, 0x30, 0x30, 0x30, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x63, 0x62, 0x74, 0x2e, 0x46, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x65, 0x64, 0x31, 0x30, 0x30, 0x30, 0x30,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x32, 0xec, 0x01, 0x0a, 0x23, 0x46, 0x63, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x65, 0x64, 0x31, 0x30, 0x30, 0x30, 0x30, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x63,
	0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x65, 0x64, 0x31, 0x30, 0x30, 0x30, 0x30, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x65, 0x64, 0x31, 0x30, 0x30, 0x30, 0x30, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x2b, 0x2e, 0x63, 0x62, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x65, 0x64, 0x31, 0x30, 0x30, 0x30, 0x30,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x65, 0x64, 0x31, 0x30, 0x30, 0x30, 0x30, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x74, 0x68, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x70, 0x73, 0x2f,
	0x78, 0x61, 0x74, 0x75, 0x2d, 0x63, 0x62, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fct_address_access_chunked_10000_proto_rawDescOnce sync.Once
	file_fct_address_access_chunked_10000_proto_rawDescData = file_fct_address_access_chunked_10000_proto_rawDesc
)

func file_fct_address_access_chunked_10000_proto_rawDescGZIP() []byte {
	file_fct_address_access_chunked_10000_proto_rawDescOnce.Do(func() {
		file_fct_address_access_chunked_10000_proto_rawDescData = protoimpl.X.CompressGZIP(file_fct_address_access_chunked_10000_proto_rawDescData)
	})
	return file_fct_address_access_chunked_10000_proto_rawDescData
}

var file_fct_address_access_chunked_10000_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_fct_address_access_chunked_10000_proto_goTypes = []any{
	(*FctAddressAccessChunked10000)(nil),             // 0: cbt.FctAddressAccessChunked10000
	(*ListFctAddressAccessChunked10000Request)(nil),  // 1: cbt.ListFctAddressAccessChunked10000Request
	(*ListFctAddressAccessChunked10000Response)(nil), // 2: cbt.ListFctAddressAccessChunked10000Response
	(*GetFctAddressAccessChunked10000Request)(nil),   // 3: cbt.GetFctAddressAccessChunked10000Request
	(*GetFctAddressAccessChunked10000Response)(nil),  // 4: cbt.GetFctAddressAccessChunked10000Response
	(*UInt32Filter)(nil),                             // 5: cbt.UInt32Filter
}
var file_fct_address_access_chunked_10000_proto_depIdxs = []int32{
	5, // 0: cbt.ListFctAddressAccessChunked10000Request.chunk_start_block_number:type_name -> cbt.UInt32Filter
	5, // 1: cbt.ListFctAddressAccessChunked10000Request.updated_date_time:type_name -> cbt.UInt32Filter
	5, // 2: cbt.ListFctAddressAccessChunked10000Request.first_accessed_accounts:type_name -> cbt.UInt32Filter
	5, // 3: cbt.ListFctAddressAccessChunked10000Request.last_accessed_accounts:type_name -> cbt.UInt32Filter
	0, // 4: cbt.ListFctAddressAccessChunked10000Response.fct_address_access_chunked_10000:type_name -> cbt.FctAddressAccessChunked10000
	0, // 5: cbt.GetFctAddressAccessChunked10000Response.item:type_name -> cbt.FctAddressAccessChunked10000
	1, // 6: cbt.FctAddressAccessChunked10000Service.List:input_type -> cbt.ListFctAddressAccessChunked10000Request
	3, // 7: cbt.FctAddressAccessChunked10000Service.Get:input_type -> cbt.GetFctAddressAccessChunked10000Request
	2, // 8: cbt.FctAddressAccessChunked10000Service.List:output_type -> cbt.ListFctAddressAccessChunked10000Response
	4, // 9: cbt.FctAddressAccessChunked10000Service.Get:output_type -> cbt.GetFctAddressAccessChunked10000Response
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_fct_address_access_chunked_10000_proto_init() }
func file_fct_address_access_chunked_10000_proto_init() {
	if File_fct_address_access_chunked_10000_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_fct_address_access_chunked_10000_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*FctAddressAccessChunked10000); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fct_address_access_chunked_10000_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ListFctAddressAccessChunked10000Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fct_address_access_chunked_10000_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListFctAddressAccessChunked10000Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fct_address_access_chunked_10000_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetFctAddressAccessChunked10000Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fct_address_access_chunked_10000_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetFctAddressAccessChunked10000Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fct_address_access_chunked_10000_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fct_address_access_chunked_10000_proto_goTypes,
		DependencyIndexes: file_fct_address_access_chunked_10000_proto_depIdxs,
		MessageInfos:      file_fct_address_access_chunked_10000_proto_msgTypes,
	}.Build()
	File_fct_address_access_chunked_10000_proto = out.File
	file_fct_address_access_chunked_10000_proto_rawDesc = nil
	file_fct_address_access_chunked_10000_proto_goTypes = nil
	file_fct_address_access_chunked_10000_proto_depIdxs = nil
}
