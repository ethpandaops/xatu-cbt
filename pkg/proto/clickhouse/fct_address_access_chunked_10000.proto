syntax = "proto3";

package cbt;

import "common.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "clickhouse/annotations.proto";

option go_package = "github.com/ethpandaops/xatu-cbt/pkg/proto/clickhouse";
// Address access totals chunked by 10000 blocks

message FctAddressAccessChunked10000 {
  // Timestamp when the record was last updated
  uint32 updated_date_time = 11;
  // Start block number of the chunk
  uint32 chunk_start_block_number = 12;
  // Number of accounts first accessed in the chunk
  uint32 first_accessed_accounts = 13;
  // Number of accounts last accessed in the chunk
  uint32 last_accessed_accounts = 14;
}

// Request for listing fct_address_access_chunked_10000 records
message ListFctAddressAccessChunked10000Request {
  // Filter by chunk_start_block_number - Start block number of the chunk (PRIMARY KEY - required)
  UInt32Filter chunk_start_block_number = 1 [(google.api.field_behavior) = REQUIRED];

  // Filter by updated_date_time - Timestamp when the record was last updated (optional)
  UInt32Filter updated_date_time = 2 [(google.api.field_behavior) = OPTIONAL];
  // Filter by first_accessed_accounts - Number of accounts first accessed in the chunk (optional)
  UInt32Filter first_accessed_accounts = 3 [(google.api.field_behavior) = OPTIONAL];
  // Filter by last_accessed_accounts - Number of accounts last accessed in the chunk (optional)
  UInt32Filter last_accessed_accounts = 4 [(google.api.field_behavior) = OPTIONAL];

  // The maximum number of fct_address_access_chunked_10000 to return.
  // If unspecified, at most 100 items will be returned.
  // The maximum value is 10000; values above 10000 will be coerced to 10000.
  int32 page_size = 5 [(google.api.field_behavior) = OPTIONAL];
  // A page token, received from a previous `ListFctAddressAccessChunked10000` call.
  // Provide this to retrieve the subsequent page.
  string page_token = 6 [(google.api.field_behavior) = OPTIONAL];
  // The order of results. Format: comma-separated list of fields.
  // Example: "foo,bar" or "foo desc,bar" for descending order on foo.
  // If unspecified, results will be returned in the default order.
  string order_by = 7 [(google.api.field_behavior) = OPTIONAL];
}

// Response for listing fct_address_access_chunked_10000 records
message ListFctAddressAccessChunked10000Response {
  // The list of fct_address_access_chunked_10000.
  repeated FctAddressAccessChunked10000 fct_address_access_chunked_10000 = 1;
  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// Request for getting a single fct_address_access_chunked_10000 record by primary key
message GetFctAddressAccessChunked10000Request {
  // Start block number of the chunk
  uint32 chunk_start_block_number = 1; // Primary key (required)
}

// Response for getting a single fct_address_access_chunked_10000 record
message GetFctAddressAccessChunked10000Response {
  FctAddressAccessChunked10000 item = 1;
}

// Query fct_address_access_chunked_10000 data
service FctAddressAccessChunked10000Service {
  // List records | Retrieve paginated results with optional filtering
  rpc List(ListFctAddressAccessChunked10000Request) returns (ListFctAddressAccessChunked10000Response) {
    option (google.api.http) = {
      get: "/api/v1/fct_address_access_chunked_10000"
    };
  }
  // Get record | Retrieve a single record by chunk_start_block_number
  rpc Get(GetFctAddressAccessChunked10000Request) returns (GetFctAddressAccessChunked10000Response) {
    option (google.api.http) = {
      get: "/api/v1/fct_address_access_chunked_10000/{chunk_start_block_number}"
    };
  }
}
