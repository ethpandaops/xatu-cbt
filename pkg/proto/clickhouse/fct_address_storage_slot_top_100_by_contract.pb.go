// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: fct_address_storage_slot_top_100_by_contract.proto

package clickhouse

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FctAddressStorageSlotTop100ByContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Timestamp when the record was last updated
	UpdatedDateTime uint32 `protobuf:"varint,11,opt,name=updated_date_time,json=updatedDateTime,proto3" json:"updated_date_time,omitempty"`
	// Rank by total storage slots (1=highest)
	Rank uint32 `protobuf:"varint,12,opt,name=rank,proto3" json:"rank,omitempty"`
	// The contract address
	ContractAddress string `protobuf:"bytes,13,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// Total number of storage slots for this contract
	TotalStorageSlots uint64 `protobuf:"varint,14,opt,name=total_storage_slots,json=totalStorageSlots,proto3" json:"total_storage_slots,omitempty"`
}

func (x *FctAddressStorageSlotTop100ByContract) Reset() {
	*x = FctAddressStorageSlotTop100ByContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fct_address_storage_slot_top_100_by_contract_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FctAddressStorageSlotTop100ByContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FctAddressStorageSlotTop100ByContract) ProtoMessage() {}

func (x *FctAddressStorageSlotTop100ByContract) ProtoReflect() protoreflect.Message {
	mi := &file_fct_address_storage_slot_top_100_by_contract_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FctAddressStorageSlotTop100ByContract.ProtoReflect.Descriptor instead.
func (*FctAddressStorageSlotTop100ByContract) Descriptor() ([]byte, []int) {
	return file_fct_address_storage_slot_top_100_by_contract_proto_rawDescGZIP(), []int{0}
}

func (x *FctAddressStorageSlotTop100ByContract) GetUpdatedDateTime() uint32 {
	if x != nil {
		return x.UpdatedDateTime
	}
	return 0
}

func (x *FctAddressStorageSlotTop100ByContract) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *FctAddressStorageSlotTop100ByContract) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *FctAddressStorageSlotTop100ByContract) GetTotalStorageSlots() uint64 {
	if x != nil {
		return x.TotalStorageSlots
	}
	return 0
}

// ListFctAddressStorageSlotTop100ByContractRequest is the request message for listing fct_address_storage_slot_top_100_by_contract records
type ListFctAddressStorageSlotTop100ByContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter by rank (PRIMARY KEY - required)
	Rank *UInt32Filter `protobuf:"bytes,1,opt,name=rank,proto3" json:"rank,omitempty"`
	// Filter by updated_date_time (optional)
	UpdatedDateTime *UInt32Filter `protobuf:"bytes,2,opt,name=updated_date_time,json=updatedDateTime,proto3" json:"updated_date_time,omitempty"`
	// Filter by contract_address (optional)
	ContractAddress *StringFilter `protobuf:"bytes,3,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// Filter by total_storage_slots (optional)
	TotalStorageSlots *UInt64Filter `protobuf:"bytes,4,opt,name=total_storage_slots,json=totalStorageSlots,proto3" json:"total_storage_slots,omitempty"`
	// The maximum number of fct_address_storage_slot_top_100_by_contract to return.
	// If unspecified, at most 100 items will be returned.
	// The maximum value is 10000; values above 10000 will be coerced to 10000.
	PageSize int32 `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous `ListFctAddressStorageSlotTop100ByContract` call.
	// Provide this to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,6,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The order of results. Format: comma-separated list of fields.
	// Example: "foo,bar" or "foo desc,bar" for descending order on foo.
	// If unspecified, results will be returned in the default order.
	OrderBy string `protobuf:"bytes,7,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *ListFctAddressStorageSlotTop100ByContractRequest) Reset() {
	*x = ListFctAddressStorageSlotTop100ByContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fct_address_storage_slot_top_100_by_contract_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFctAddressStorageSlotTop100ByContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFctAddressStorageSlotTop100ByContractRequest) ProtoMessage() {}

func (x *ListFctAddressStorageSlotTop100ByContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fct_address_storage_slot_top_100_by_contract_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFctAddressStorageSlotTop100ByContractRequest.ProtoReflect.Descriptor instead.
func (*ListFctAddressStorageSlotTop100ByContractRequest) Descriptor() ([]byte, []int) {
	return file_fct_address_storage_slot_top_100_by_contract_proto_rawDescGZIP(), []int{1}
}

func (x *ListFctAddressStorageSlotTop100ByContractRequest) GetRank() *UInt32Filter {
	if x != nil {
		return x.Rank
	}
	return nil
}

func (x *ListFctAddressStorageSlotTop100ByContractRequest) GetUpdatedDateTime() *UInt32Filter {
	if x != nil {
		return x.UpdatedDateTime
	}
	return nil
}

func (x *ListFctAddressStorageSlotTop100ByContractRequest) GetContractAddress() *StringFilter {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

func (x *ListFctAddressStorageSlotTop100ByContractRequest) GetTotalStorageSlots() *UInt64Filter {
	if x != nil {
		return x.TotalStorageSlots
	}
	return nil
}

func (x *ListFctAddressStorageSlotTop100ByContractRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListFctAddressStorageSlotTop100ByContractRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListFctAddressStorageSlotTop100ByContractRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

// ListFctAddressStorageSlotTop100ByContractResponse is the response message for listing fct_address_storage_slot_top_100_by_contract records
type ListFctAddressStorageSlotTop100ByContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of fct_address_storage_slot_top_100_by_contract.
	FctAddressStorageSlotTop_100ByContract []*FctAddressStorageSlotTop100ByContract `protobuf:"bytes,1,rep,name=fct_address_storage_slot_top_100_by_contract,json=fctAddressStorageSlotTop100ByContract,proto3" json:"fct_address_storage_slot_top_100_by_contract,omitempty"`
	// A token, which can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListFctAddressStorageSlotTop100ByContractResponse) Reset() {
	*x = ListFctAddressStorageSlotTop100ByContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fct_address_storage_slot_top_100_by_contract_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFctAddressStorageSlotTop100ByContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFctAddressStorageSlotTop100ByContractResponse) ProtoMessage() {}

func (x *ListFctAddressStorageSlotTop100ByContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fct_address_storage_slot_top_100_by_contract_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFctAddressStorageSlotTop100ByContractResponse.ProtoReflect.Descriptor instead.
func (*ListFctAddressStorageSlotTop100ByContractResponse) Descriptor() ([]byte, []int) {
	return file_fct_address_storage_slot_top_100_by_contract_proto_rawDescGZIP(), []int{2}
}

func (x *ListFctAddressStorageSlotTop100ByContractResponse) GetFctAddressStorageSlotTop_100ByContract() []*FctAddressStorageSlotTop100ByContract {
	if x != nil {
		return x.FctAddressStorageSlotTop_100ByContract
	}
	return nil
}

func (x *ListFctAddressStorageSlotTop100ByContractResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// GetFctAddressStorageSlotTop100ByContractRequest is the request message for getting a single fct_address_storage_slot_top_100_by_contract record by primary key
type GetFctAddressStorageSlotTop100ByContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Rank by total storage slots (1=highest)
	Rank uint32 `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"` // Primary key (required)
}

func (x *GetFctAddressStorageSlotTop100ByContractRequest) Reset() {
	*x = GetFctAddressStorageSlotTop100ByContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fct_address_storage_slot_top_100_by_contract_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFctAddressStorageSlotTop100ByContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFctAddressStorageSlotTop100ByContractRequest) ProtoMessage() {}

func (x *GetFctAddressStorageSlotTop100ByContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fct_address_storage_slot_top_100_by_contract_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFctAddressStorageSlotTop100ByContractRequest.ProtoReflect.Descriptor instead.
func (*GetFctAddressStorageSlotTop100ByContractRequest) Descriptor() ([]byte, []int) {
	return file_fct_address_storage_slot_top_100_by_contract_proto_rawDescGZIP(), []int{3}
}

func (x *GetFctAddressStorageSlotTop100ByContractRequest) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

// GetFctAddressStorageSlotTop100ByContractResponse is the response message for getting a single fct_address_storage_slot_top_100_by_contract record
type GetFctAddressStorageSlotTop100ByContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *FctAddressStorageSlotTop100ByContract `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *GetFctAddressStorageSlotTop100ByContractResponse) Reset() {
	*x = GetFctAddressStorageSlotTop100ByContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fct_address_storage_slot_top_100_by_contract_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFctAddressStorageSlotTop100ByContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFctAddressStorageSlotTop100ByContractResponse) ProtoMessage() {}

func (x *GetFctAddressStorageSlotTop100ByContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fct_address_storage_slot_top_100_by_contract_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFctAddressStorageSlotTop100ByContractResponse.ProtoReflect.Descriptor instead.
func (*GetFctAddressStorageSlotTop100ByContractResponse) Descriptor() ([]byte, []int) {
	return file_fct_address_storage_slot_top_100_by_contract_proto_rawDescGZIP(), []int{4}
}

func (x *GetFctAddressStorageSlotTop100ByContractResponse) GetItem() *FctAddressStorageSlotTop100ByContract {
	if x != nil {
		return x.Item
	}
	return nil
}

var File_fct_address_storage_slot_top_100_by_contract_proto protoreflect.FileDescriptor

var file_fct_address_storage_slot_top_100_by_contract_proto_rawDesc = []byte{
	0x0a, 0x32, 0x66, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x31,
	0x30, 0x30, 0x5f, 0x62, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x63, 0x62, 0x74, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x01, 0x0a, 0x25, 0x46, 0x63, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6c, 0x6f,
	0x74, 0x54, 0x6f, 0x70, 0x31, 0x30, 0x30, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x13,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0xf0, 0x02, 0x0a,
	0x30, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x31, 0x30, 0x30,
	0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x3d, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x41, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x22,
	0xe5, 0x01, 0x0a, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x54, 0x6f, 0x70,
	0x31, 0x30, 0x30, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x2c, 0x66, 0x63, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x31, 0x30, 0x30, 0x5f, 0x62, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63,
	0x62, 0x74, 0x2e, 0x46, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x31, 0x30, 0x30, 0x42, 0x79,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x25, 0x66, 0x63, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x54,
	0x6f, 0x70, 0x31, 0x30, 0x30, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x45, 0x0a, 0x2f, 0x47, 0x65, 0x74, 0x46, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x6c, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x31, 0x30, 0x30, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0x72,
	0x0a, 0x30, 0x47, 0x65, 0x74, 0x46, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x31, 0x30, 0x30,
	0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x46, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x31,
	0x30, 0x30, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x32, 0x99, 0x02, 0x0a, 0x2c, 0x46, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x31,
	0x30, 0x30, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x2e, 0x63, 0x62,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x31, 0x30,
	0x30, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x63, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6c,
	0x6f, 0x74, 0x54, 0x6f, 0x70, 0x31, 0x30, 0x30, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x34, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x63, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6c, 0x6f, 0x74,
	0x54, 0x6f, 0x70, 0x31, 0x30, 0x30, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x62, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x31, 0x30, 0x30, 0x42, 0x79, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x36,
	0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x74, 0x68,
	0x70, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x70, 0x73, 0x2f, 0x78, 0x61, 0x74, 0x75, 0x2d, 0x63, 0x62,
	0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x69, 0x63,
	0x6b, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fct_address_storage_slot_top_100_by_contract_proto_rawDescOnce sync.Once
	file_fct_address_storage_slot_top_100_by_contract_proto_rawDescData = file_fct_address_storage_slot_top_100_by_contract_proto_rawDesc
)

func file_fct_address_storage_slot_top_100_by_contract_proto_rawDescGZIP() []byte {
	file_fct_address_storage_slot_top_100_by_contract_proto_rawDescOnce.Do(func() {
		file_fct_address_storage_slot_top_100_by_contract_proto_rawDescData = protoimpl.X.CompressGZIP(file_fct_address_storage_slot_top_100_by_contract_proto_rawDescData)
	})
	return file_fct_address_storage_slot_top_100_by_contract_proto_rawDescData
}

var file_fct_address_storage_slot_top_100_by_contract_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_fct_address_storage_slot_top_100_by_contract_proto_goTypes = []any{
	(*FctAddressStorageSlotTop100ByContract)(nil),             // 0: cbt.FctAddressStorageSlotTop100ByContract
	(*ListFctAddressStorageSlotTop100ByContractRequest)(nil),  // 1: cbt.ListFctAddressStorageSlotTop100ByContractRequest
	(*ListFctAddressStorageSlotTop100ByContractResponse)(nil), // 2: cbt.ListFctAddressStorageSlotTop100ByContractResponse
	(*GetFctAddressStorageSlotTop100ByContractRequest)(nil),   // 3: cbt.GetFctAddressStorageSlotTop100ByContractRequest
	(*GetFctAddressStorageSlotTop100ByContractResponse)(nil),  // 4: cbt.GetFctAddressStorageSlotTop100ByContractResponse
	(*UInt32Filter)(nil), // 5: cbt.UInt32Filter
	(*StringFilter)(nil), // 6: cbt.StringFilter
	(*UInt64Filter)(nil), // 7: cbt.UInt64Filter
}
var file_fct_address_storage_slot_top_100_by_contract_proto_depIdxs = []int32{
	5, // 0: cbt.ListFctAddressStorageSlotTop100ByContractRequest.rank:type_name -> cbt.UInt32Filter
	5, // 1: cbt.ListFctAddressStorageSlotTop100ByContractRequest.updated_date_time:type_name -> cbt.UInt32Filter
	6, // 2: cbt.ListFctAddressStorageSlotTop100ByContractRequest.contract_address:type_name -> cbt.StringFilter
	7, // 3: cbt.ListFctAddressStorageSlotTop100ByContractRequest.total_storage_slots:type_name -> cbt.UInt64Filter
	0, // 4: cbt.ListFctAddressStorageSlotTop100ByContractResponse.fct_address_storage_slot_top_100_by_contract:type_name -> cbt.FctAddressStorageSlotTop100ByContract
	0, // 5: cbt.GetFctAddressStorageSlotTop100ByContractResponse.item:type_name -> cbt.FctAddressStorageSlotTop100ByContract
	1, // 6: cbt.FctAddressStorageSlotTop100ByContractService.List:input_type -> cbt.ListFctAddressStorageSlotTop100ByContractRequest
	3, // 7: cbt.FctAddressStorageSlotTop100ByContractService.Get:input_type -> cbt.GetFctAddressStorageSlotTop100ByContractRequest
	2, // 8: cbt.FctAddressStorageSlotTop100ByContractService.List:output_type -> cbt.ListFctAddressStorageSlotTop100ByContractResponse
	4, // 9: cbt.FctAddressStorageSlotTop100ByContractService.Get:output_type -> cbt.GetFctAddressStorageSlotTop100ByContractResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_fct_address_storage_slot_top_100_by_contract_proto_init() }
func file_fct_address_storage_slot_top_100_by_contract_proto_init() {
	if File_fct_address_storage_slot_top_100_by_contract_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_fct_address_storage_slot_top_100_by_contract_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*FctAddressStorageSlotTop100ByContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fct_address_storage_slot_top_100_by_contract_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ListFctAddressStorageSlotTop100ByContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fct_address_storage_slot_top_100_by_contract_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListFctAddressStorageSlotTop100ByContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fct_address_storage_slot_top_100_by_contract_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetFctAddressStorageSlotTop100ByContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fct_address_storage_slot_top_100_by_contract_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetFctAddressStorageSlotTop100ByContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fct_address_storage_slot_top_100_by_contract_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fct_address_storage_slot_top_100_by_contract_proto_goTypes,
		DependencyIndexes: file_fct_address_storage_slot_top_100_by_contract_proto_depIdxs,
		MessageInfos:      file_fct_address_storage_slot_top_100_by_contract_proto_msgTypes,
	}.Build()
	File_fct_address_storage_slot_top_100_by_contract_proto = out.File
	file_fct_address_storage_slot_top_100_by_contract_proto_rawDesc = nil
	file_fct_address_storage_slot_top_100_by_contract_proto_goTypes = nil
	file_fct_address_storage_slot_top_100_by_contract_proto_depIdxs = nil
}
