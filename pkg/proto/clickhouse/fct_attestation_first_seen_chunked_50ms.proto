syntax = "proto3";

package cbt;

import "common.proto";

option go_package = "github.com/ethpandaops/xatu-cbt/pkg/proto/clickhouse";
// Attestations first seen on the unfinalized chain broken down by 50ms chunks. Only includes attestations that were seen within 12000ms of the slot start time. There can be multiple block roots + chunk_slot_start_diff for the same slot, it most likely means votes for prior slot blocks

message FctAttestationFirstSeenChunked50ms {
  // Timestamp when the record was last updated
  uint32 updated_date_time = 11;
  // The slot number
  uint32 slot = 12;
  // The wall clock time when the slot started
  uint32 slot_start_date_time = 13;
  // The epoch number containing the slot
  uint32 epoch = 14;
  // The wall clock time when the epoch started
  uint32 epoch_start_date_time = 15;
  // The beacon block root hash that was attested, null means the attestation was missed
  string block_root = 16;
  // The different between the chunk start time and slot_start_date_time. "1500" would mean this chunk contains attestations first seen between 1500ms 1550ms into the slot
  uint32 chunk_slot_start_diff = 17;
  // The number of attestations in this chunk
  uint32 attestation_count = 18;
}

// ListFctAttestationFirstSeenChunked50msRequest is the request message for listing fct_attestation_first_seen_chunked_50ms records
message ListFctAttestationFirstSeenChunked50msRequest {
  // Filter by slot_start_date_time (PRIMARY KEY - required)
  UInt32Filter slot_start_date_time = 1;

  // Filter by block_root (ORDER BY column 2 - optional)
  StringFilter block_root = 2;

  // Filter by chunk_slot_start_diff (ORDER BY column 3 - optional)
  UInt32Filter chunk_slot_start_diff = 3;

  // Filter by updated_date_time (optional)
  UInt32Filter updated_date_time = 4;
  // Filter by slot (optional)
  UInt32Filter slot = 5;
  // Filter by epoch (optional)
  UInt32Filter epoch = 6;
  // Filter by epoch_start_date_time (optional)
  UInt32Filter epoch_start_date_time = 7;
  // Filter by attestation_count (optional)
  UInt32Filter attestation_count = 8;

  // The maximum number of fct_attestation_first_seen_chunked_50ms to return.
  // If unspecified, at most 100 items will be returned.
  // The maximum value is 10000; values above 10000 will be coerced to 10000.
  int32 page_size = 9;
  // A page token, received from a previous `ListFctAttestationFirstSeenChunked50ms` call.
  // Provide this to retrieve the subsequent page.
  string page_token = 10;
  // The order of results. Format: comma-separated list of fields.
  // Example: "foo,bar" or "foo desc,bar" for descending order on foo.
  // If unspecified, results will be returned in the default order.
  string order_by = 11;
}

// ListFctAttestationFirstSeenChunked50msResponse is the response message for listing fct_attestation_first_seen_chunked_50ms records
message ListFctAttestationFirstSeenChunked50msResponse {
  // The list of fct_attestation_first_seen_chunked_50ms.
  repeated FctAttestationFirstSeenChunked50ms fct_attestation_first_seen_chunked_50ms = 1;
  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// GetFctAttestationFirstSeenChunked50msRequest is the request message for getting a single fct_attestation_first_seen_chunked_50ms record by primary key
message GetFctAttestationFirstSeenChunked50msRequest {
  // The wall clock time when the slot started
  uint32 slot_start_date_time = 1; // Primary key (required)
}

// GetFctAttestationFirstSeenChunked50msResponse is the response message for getting a single fct_attestation_first_seen_chunked_50ms record
message GetFctAttestationFirstSeenChunked50msResponse {
  FctAttestationFirstSeenChunked50ms item = 1;
}

// FctAttestationFirstSeenChunked50msService provides RPC methods for querying fct_attestation_first_seen_chunked_50ms data
service FctAttestationFirstSeenChunked50msService {
  // List returns paginated fct_attestation_first_seen_chunked_50ms records
  rpc List(ListFctAttestationFirstSeenChunked50msRequest) returns (ListFctAttestationFirstSeenChunked50msResponse);
  // Get returns a single fct_attestation_first_seen_chunked_50ms record by primary key
  rpc Get(GetFctAttestationFirstSeenChunked50msRequest) returns (GetFctAttestationFirstSeenChunked50msResponse);
}
