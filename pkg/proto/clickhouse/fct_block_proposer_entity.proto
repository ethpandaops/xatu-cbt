syntax = "proto3";

package cbt;

import "common.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/ethpandaops/xatu-cbt/pkg/proto/clickhouse";
// Block proposer entity for the unfinalized chain

message FctBlockProposerEntity {
  // Timestamp when the record was last updated
  uint32 updated_date_time = 11;
  // The slot number
  uint32 slot = 12;
  // The wall clock time when the slot started
  uint32 slot_start_date_time = 13;
  // The epoch number containing the slot
  uint32 epoch = 14;
  // The wall clock time when the epoch started
  uint32 epoch_start_date_time = 15;
  // The entity that proposed the block
  google.protobuf.StringValue entity = 16;
}

// ListFctBlockProposerEntityRequest is the request message for listing fct_block_proposer_entity records
message ListFctBlockProposerEntityRequest {
  // Filter by slot_start_date_time (PRIMARY KEY - required)
  UInt32Filter slot_start_date_time = 1;

  // Filter by updated_date_time (optional)
  UInt32Filter updated_date_time = 2;
  // Filter by slot (optional)
  UInt32Filter slot = 3;
  // Filter by epoch (optional)
  UInt32Filter epoch = 4;
  // Filter by epoch_start_date_time (optional)
  UInt32Filter epoch_start_date_time = 5;
  // Filter by entity (optional)
  NullableStringFilter entity = 6;

  // The maximum number of fct_block_proposer_entity to return.
  // If unspecified, at most 100 items will be returned.
  // The maximum value is 10000; values above 10000 will be coerced to 10000.
  int32 page_size = 7;
  // A page token, received from a previous `ListFctBlockProposerEntity` call.
  // Provide this to retrieve the subsequent page.
  string page_token = 8;
  // The order of results. Format: comma-separated list of fields.
  // Example: "foo,bar" or "foo desc,bar" for descending order on foo.
  // If unspecified, results will be returned in the default order.
  string order_by = 9;
}

// ListFctBlockProposerEntityResponse is the response message for listing fct_block_proposer_entity records
message ListFctBlockProposerEntityResponse {
  // The list of fct_block_proposer_entity.
  repeated FctBlockProposerEntity fct_block_proposer_entity = 1;
  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// GetFctBlockProposerEntityRequest is the request message for getting a single fct_block_proposer_entity record by primary key
message GetFctBlockProposerEntityRequest {
  // The wall clock time when the slot started
  uint32 slot_start_date_time = 1; // Primary key (required)
}

// GetFctBlockProposerEntityResponse is the response message for getting a single fct_block_proposer_entity record
message GetFctBlockProposerEntityResponse {
  FctBlockProposerEntity item = 1;
}

// FctBlockProposerEntityService provides RPC methods for querying fct_block_proposer_entity data
service FctBlockProposerEntityService {
  // List returns paginated fct_block_proposer_entity records
  rpc List(ListFctBlockProposerEntityRequest) returns (ListFctBlockProposerEntityResponse);
  // Get returns a single fct_block_proposer_entity record by primary key
  rpc Get(GetFctBlockProposerEntityRequest) returns (GetFctBlockProposerEntityResponse);
}
