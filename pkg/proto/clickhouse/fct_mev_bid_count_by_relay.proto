syntax = "proto3";

package cbt;

import "tagger/tagger.proto";
import "common.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

option go_package = "github.com/ethpandaops/xatu-cbt/pkg/proto/clickhouse";
// Total number of MEV relay bids for a slot by relay

message FctMevBidCountByRelay {
  // Timestamp when the record was last updated
  uint32 updated_date_time = 11 [(tagger.tags) = "ch:\"updated_date_time\""];
  // Slot number within the block bid
  uint32 slot = 12 [(tagger.tags) = "ch:\"slot\""];
  // The start time for the slot that the bid is for
  uint32 slot_start_date_time = 13 [(tagger.tags) = "ch:\"slot_start_date_time\""];
  // Epoch number derived from the slot that the bid is for
  uint32 epoch = 14 [(tagger.tags) = "ch:\"epoch\""];
  // The start time for the epoch that the bid is for
  uint32 epoch_start_date_time = 15 [(tagger.tags) = "ch:\"epoch_start_date_time\""];
  // The relay that the bid was fetched from
  string relay_name = 16 [(tagger.tags) = "ch:\"relay_name\""];
  // The total number of bids for the relay
  uint32 bid_total = 17 [(tagger.tags) = "ch:\"bid_total\""];
}

// Request for listing fct_mev_bid_count_by_relay records
message ListFctMevBidCountByRelayRequest {
  // Filter by slot_start_date_time - The start time for the slot that the bid is for (PRIMARY KEY - required)
  UInt32Filter slot_start_date_time = 1 [(google.api.field_behavior) = REQUIRED];

  // Filter by relay_name - The relay that the bid was fetched from (ORDER BY column 2 - optional)
  StringFilter relay_name = 2 [(google.api.field_behavior) = OPTIONAL];

  // Filter by updated_date_time - Timestamp when the record was last updated (optional)
  UInt32Filter updated_date_time = 3 [(google.api.field_behavior) = OPTIONAL];
  // Filter by slot - Slot number within the block bid (optional)
  UInt32Filter slot = 4 [(google.api.field_behavior) = OPTIONAL];
  // Filter by epoch - Epoch number derived from the slot that the bid is for (optional)
  UInt32Filter epoch = 5 [(google.api.field_behavior) = OPTIONAL];
  // Filter by epoch_start_date_time - The start time for the epoch that the bid is for (optional)
  UInt32Filter epoch_start_date_time = 6 [(google.api.field_behavior) = OPTIONAL];
  // Filter by bid_total - The total number of bids for the relay (optional)
  UInt32Filter bid_total = 7 [(google.api.field_behavior) = OPTIONAL];

  // The maximum number of fct_mev_bid_count_by_relay to return.
  // If unspecified, at most 100 items will be returned.
  // The maximum value is 10000; values above 10000 will be coerced to 10000.
  int32 page_size = 8 [(google.api.field_behavior) = OPTIONAL];
  // A page token, received from a previous `ListFctMevBidCountByRelay` call.
  // Provide this to retrieve the subsequent page.
  string page_token = 9 [(google.api.field_behavior) = OPTIONAL];
  // The order of results. Format: comma-separated list of fields.
  // Example: "foo,bar" or "foo desc,bar" for descending order on foo.
  // If unspecified, results will be returned in the default order.
  string order_by = 10 [(google.api.field_behavior) = OPTIONAL];
}

// Response for listing fct_mev_bid_count_by_relay records
message ListFctMevBidCountByRelayResponse {
  // The list of fct_mev_bid_count_by_relay.
  repeated FctMevBidCountByRelay fct_mev_bid_count_by_relay = 1;
  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// Request for getting a single fct_mev_bid_count_by_relay record by primary key
message GetFctMevBidCountByRelayRequest {
  // The start time for the slot that the bid is for
  uint32 slot_start_date_time = 1; // Primary key (required)
}

// Response for getting a single fct_mev_bid_count_by_relay record
message GetFctMevBidCountByRelayResponse {
  FctMevBidCountByRelay item = 1;
}

// Query fct_mev_bid_count_by_relay data
service FctMevBidCountByRelayService {
  // List records | Retrieve paginated results with optional filtering
  rpc List(ListFctMevBidCountByRelayRequest) returns (ListFctMevBidCountByRelayResponse) {
    option (google.api.http) = {
      get: "/api/v1/fct_mev_bid_count_by_relay"
    };
  }
  // Get record | Retrieve a single record by slot_start_date_time
  rpc Get(GetFctMevBidCountByRelayRequest) returns (GetFctMevBidCountByRelayResponse) {
    option (google.api.http) = {
      get: "/api/v1/fct_mev_bid_count_by_relay/{slot_start_date_time}"
    };
  }
}
