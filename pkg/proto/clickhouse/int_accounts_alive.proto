syntax = "proto3";

package cbt;

import "common.proto";

option go_package = "github.com/ethpandaops/xatu-cbt/pkg/proto/clickhouse";
// Table that states if an account is currently alive or not

message IntAccountsAlive {
  // The address of the account
  string address = 11;
  // The block number of the latest status of this address
  uint32 block_number = 12;
  // Whether the account is currently alive in the state
  bool is_alive = 13;
}

// Request for listing int_accounts_alive records
message ListIntAccountsAliveRequest {
  // Filter by address - The address of the account (PRIMARY KEY - required)
  StringFilter address = 1;

  // Filter by block_number - The block number of the latest status of this address (optional)
  UInt32Filter block_number = 2;
  // Filter by is_alive - Whether the account is currently alive in the state (optional)
  BoolFilter is_alive = 3;

  // The maximum number of int_accounts_alive to return.
  // If unspecified, at most 100 items will be returned.
  // The maximum value is 10000; values above 10000 will be coerced to 10000.
  int32 page_size = 4;
  // A page token, received from a previous `ListIntAccountsAlive` call.
  // Provide this to retrieve the subsequent page.
  string page_token = 5;
  // The order of results. Format: comma-separated list of fields.
  // Example: "foo,bar" or "foo desc,bar" for descending order on foo.
  // If unspecified, results will be returned in the default order.
  string order_by = 6;
}

// Response for listing int_accounts_alive records
message ListIntAccountsAliveResponse {
  // The list of int_accounts_alive.
  repeated IntAccountsAlive int_accounts_alive = 1;
  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// Request for getting a single int_accounts_alive record by primary key
message GetIntAccountsAliveRequest {
  // The address of the account
  string address = 1; // Primary key (required)
}

// Response for getting a single int_accounts_alive record
message GetIntAccountsAliveResponse {
  IntAccountsAlive item = 1;
}

// Query int_accounts_alive data
service IntAccountsAliveService {
  // List records | Retrieve paginated results with optional filtering
  rpc List(ListIntAccountsAliveRequest) returns (ListIntAccountsAliveResponse);
  // Get record | Retrieve a single record by primary key
  rpc Get(GetIntAccountsAliveRequest) returns (GetIntAccountsAliveResponse);
}
