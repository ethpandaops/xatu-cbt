syntax = "proto3";

package cbt;

import "common.proto";

option go_package = "github.com/ethpandaops/xatu-cbt/pkg/proto/clickhouse";
// Block proposers for the unfinalized chain. Forks in the chain may cause mulitple proposers for the same slot to be present

message IntBlockFirstSeen {
  // Timestamp when the record was last updated
  uint32 updated_date_time = 11;
  // Source of the event
  string source = 12;
  // The slot number for which the proposer duty is assigned
  uint32 slot = 13;
  // The wall clock time when the slot started
  uint32 slot_start_date_time = 14;
  // The epoch number containing the slot
  uint32 epoch = 15;
  // The wall clock time when the epoch started
  uint32 epoch_start_date_time = 16;
  // The time from slot start for the client to see the block
  uint32 seen_slot_start_diff = 17;
  // Username of the node
  string username = 18;
  // ID of the node
  string node_id = 19;
  // Classification of the node, e.g. "individual", "institution", "internal" (aka ethPandaOps) or "unclassified"
  string classification = 20;
  // Name of the client
  string meta_client_name = 21;
  // Version of the client
  string meta_client_version = 22;
  // Implementation of the client
  string meta_client_implementation = 23;
  // City of the client
  string meta_client_geo_city = 24;
  // Country of the client
  string meta_client_geo_country = 25;
  // Country code of the client
  string meta_client_geo_country_code = 26;
  // Continent code of the client
  string meta_client_geo_continent_code = 27;
  // Ethereum consensus client version
  string meta_consensus_version = 28;
  // Ethereum consensus client implementation
  string meta_consensus_implementation = 29;
}

// ListIntBlockFirstSeenRequest is the request message for listing int_block__first_seen records
message ListIntBlockFirstSeenRequest {
  // Filter by slot_start_date_time (PRIMARY KEY - required)
  UInt32Filter slot_start_date_time = 1;

  // Filter by meta_client_name (ORDER BY column 2 - optional)
  StringFilter meta_client_name = 2;

  // Filter by updated_date_time (optional)
  UInt32Filter updated_date_time = 3;

  // Filter by source (optional)
  StringFilter source = 4;

  // Filter by slot (optional)
  UInt32Filter slot = 5;

  // Filter by epoch (optional)
  UInt32Filter epoch = 6;

  // Filter by epoch_start_date_time (optional)
  UInt32Filter epoch_start_date_time = 7;

  // Filter by seen_slot_start_diff (optional)
  UInt32Filter seen_slot_start_diff = 8;

  // Filter by username (optional)
  StringFilter username = 9;

  // Filter by node_id (optional)
  StringFilter node_id = 10;

  // Filter by classification (optional)
  StringFilter classification = 11;

  // Filter by meta_client_version (optional)
  StringFilter meta_client_version = 12;

  // Filter by meta_client_implementation (optional)
  StringFilter meta_client_implementation = 13;

  // Filter by meta_client_geo_city (optional)
  StringFilter meta_client_geo_city = 14;

  // Filter by meta_client_geo_country (optional)
  StringFilter meta_client_geo_country = 15;

  // Filter by meta_client_geo_country_code (optional)
  StringFilter meta_client_geo_country_code = 16;

  // Filter by meta_client_geo_continent_code (optional)
  StringFilter meta_client_geo_continent_code = 17;

  // Filter by meta_consensus_version (optional)
  StringFilter meta_consensus_version = 18;

  // Filter by meta_consensus_implementation (optional)
  StringFilter meta_consensus_implementation = 19;

  // The maximum number of int_block__first_seen to return.
  // If unspecified, at most 100 items will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 21;
  // A page token, received from a previous `ListIntBlockFirstSeen` call.
  // Provide this to retrieve the subsequent page.
  string page_token = 22;
  // The order of results. Format: comma-separated list of fields.
  // Example: "foo,bar" or "foo desc,bar" for descending order on foo.
  // If unspecified, results will be returned in the default order.
  string order_by = 23;
}

// ListIntBlockFirstSeenResponse is the response message for listing int_block__first_seen records
message ListIntBlockFirstSeenResponse {
  // The list of int_block__first_seen.
  repeated IntBlockFirstSeen int_block__first_seen = 1;
  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// GetIntBlockFirstSeenRequest is the request message for getting a single int_block__first_seen record by primary key
message GetIntBlockFirstSeenRequest {
  // The wall clock time when the slot started
  uint32 slot_start_date_time = 1; // Primary key (required)
}

// GetIntBlockFirstSeenResponse is the response message for getting a single int_block__first_seen record
message GetIntBlockFirstSeenResponse {
  IntBlockFirstSeen item = 1;
}

// IntBlockFirstSeenService provides RPC methods for querying int_block__first_seen data
service IntBlockFirstSeenService {
  // List returns paginated int_block__first_seen records
  rpc List(ListIntBlockFirstSeenRequest) returns (ListIntBlockFirstSeenResponse);
  // Get returns a single int_block__first_seen record by primary key
  rpc Get(GetIntBlockFirstSeenRequest) returns (GetIntBlockFirstSeenResponse);
}
