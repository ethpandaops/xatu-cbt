syntax = "proto3";

package cbt;

import "common.proto";

option go_package = "github.com/ethpandaops/xatu-cbt/pkg/proto/clickhouse";
// Active nodes for the network

message IntXatuNodes24h {
  // Timestamp when the record was last updated
  uint32 updated_date_time = 11;
  // Timestamp when the node was last seen
  uint32 last_seen_date_time = 12;
  // Username of the node
  string username = 13;
  // ID of the node
  string node_id = 14;
  // Classification of the node, e.g. "individual", "institution", "internal" (aka ethPandaOps) or "unclassified"
  string classification = 15;
  // Name of the client
  string meta_client_name = 16;
  // Version of the client
  string meta_client_version = 17;
  // Implementation of the client
  string meta_client_implementation = 18;
  // City of the client
  string meta_client_geo_city = 19;
  // Country of the client
  string meta_client_geo_country = 20;
  // Country code of the client
  string meta_client_geo_country_code = 21;
  // Continent code of the client
  string meta_client_geo_continent_code = 22;
  // Ethereum consensus client version
  string meta_consensus_version = 23;
  // Ethereum consensus client implementation
  string meta_consensus_implementation = 24;
}

// ListIntXatuNodes24hRequest is the request message for listing int_xatu_nodes__24h records
message ListIntXatuNodes24hRequest {
  // Filter by meta_client_name (PRIMARY KEY - required)
  StringFilter meta_client_name = 1;

  // Filter by updated_date_time (optional)
  UInt32Filter updated_date_time = 2;

  // Filter by last_seen_date_time (optional)
  UInt32Filter last_seen_date_time = 3;

  // Filter by username (optional)
  StringFilter username = 4;

  // Filter by node_id (optional)
  StringFilter node_id = 5;

  // Filter by classification (optional)
  StringFilter classification = 6;

  // Filter by meta_client_version (optional)
  StringFilter meta_client_version = 7;

  // Filter by meta_client_implementation (optional)
  StringFilter meta_client_implementation = 8;

  // Filter by meta_client_geo_city (optional)
  StringFilter meta_client_geo_city = 9;

  // Filter by meta_client_geo_country (optional)
  StringFilter meta_client_geo_country = 10;

  // Filter by meta_client_geo_country_code (optional)
  StringFilter meta_client_geo_country_code = 11;

  // Filter by meta_client_geo_continent_code (optional)
  StringFilter meta_client_geo_continent_code = 12;

  // Filter by meta_consensus_version (optional)
  StringFilter meta_consensus_version = 13;

  // Filter by meta_consensus_implementation (optional)
  StringFilter meta_consensus_implementation = 14;

  // The maximum number of int_xatu_nodes__24h to return.
  // If unspecified, at most 100 items will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 16;
  // A page token, received from a previous `ListIntXatuNodes24h` call.
  // Provide this to retrieve the subsequent page.
  string page_token = 17;
  // The order of results. Format: comma-separated list of fields.
  // Example: "foo,bar" or "foo desc,bar" for descending order on foo.
  // If unspecified, results will be returned in the default order.
  string order_by = 18;
}

// ListIntXatuNodes24hResponse is the response message for listing int_xatu_nodes__24h records
message ListIntXatuNodes24hResponse {
  // The list of int_xatu_nodes__24h.
  repeated IntXatuNodes24h int_xatu_nodes__24h = 1;
  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

// GetIntXatuNodes24hRequest is the request message for getting a single int_xatu_nodes__24h record by primary key
message GetIntXatuNodes24hRequest {
  // Name of the client
  string meta_client_name = 1; // Primary key (required)
}

// GetIntXatuNodes24hResponse is the response message for getting a single int_xatu_nodes__24h record
message GetIntXatuNodes24hResponse {
  IntXatuNodes24h item = 1;
}

// IntXatuNodes24hService provides RPC methods for querying int_xatu_nodes__24h data
service IntXatuNodes24hService {
  // List returns paginated int_xatu_nodes__24h records
  rpc List(ListIntXatuNodes24hRequest) returns (ListIntXatuNodes24hResponse);
  // Get returns a single int_xatu_nodes__24h record by primary key
  rpc Get(GetIntXatuNodes24hRequest) returns (GetIntXatuNodes24hResponse);
}
